/* Generated By:JJTree&JavaCC: Do not edit this line. AdilTestConstants.java */
package edu.sdsc.adil;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AdilTestConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CREATE = 2;
  /** RegularExpression Id. */
  int FILE = 3;
  /** RegularExpression Id. */
  int DELETE = 4;
  /** RegularExpression Id. */
  int DATASOURCE = 5;
  /** RegularExpression Id. */
  int USING = 6;
  /** RegularExpression Id. */
  int PACKAGE = 7;
  /** RegularExpression Id. */
  int FROM = 8;
  /** RegularExpression Id. */
  int FILEPATH = 9;
  /** RegularExpression Id. */
  int IMPORT = 10;
  /** RegularExpression Id. */
  int FUNCTION = 11;
  /** RegularExpression Id. */
  int ANALYSIS = 12;
  /** RegularExpression Id. */
  int LIBRARY = 13;
  /** RegularExpression Id. */
  int DICTIONARY = 14;
  /** RegularExpression Id. */
  int ANNOTATE = 15;
  /** RegularExpression Id. */
  int TDM = 16;
  /** RegularExpression Id. */
  int TERMDOCUMENTMATRIX = 17;
  /** RegularExpression Id. */
  int INDEX = 18;
  /** RegularExpression Id. */
  int IN = 19;
  /** RegularExpression Id. */
  int IS = 20;
  /** RegularExpression Id. */
  int AND = 21;
  /** RegularExpression Id. */
  int OR = 22;
  /** RegularExpression Id. */
  int NOT = 23;
  /** RegularExpression Id. */
  int AS = 24;
  /** RegularExpression Id. */
  int ALL = 25;
  /** RegularExpression Id. */
  int DISTINCT = 26;
  /** RegularExpression Id. */
  int TOP = 27;
  /** RegularExpression Id. */
  int PERCENT = 28;
  /** RegularExpression Id. */
  int WITH = 29;
  /** RegularExpression Id. */
  int ONTOLOGY = 30;
  /** RegularExpression Id. */
  int BY = 31;
  /** RegularExpression Id. */
  int WHERE = 32;
  /** RegularExpression Id. */
  int LOAD = 33;
  /** RegularExpression Id. */
  int STORE = 34;
  /** RegularExpression Id. */
  int SELECT = 35;
  /** RegularExpression Id. */
  int PROJECT = 36;
  /** RegularExpression Id. */
  int PARTITION = 37;
  /** RegularExpression Id. */
  int EXECUTE = 38;
  /** RegularExpression Id. */
  int BETWEEN = 39;
  /** RegularExpression Id. */
  int LIKE = 40;
  /** RegularExpression Id. */
  int SQLQUERY = 41;
  /** RegularExpression Id. */
  int SQLPPQUERY = 42;
  /** RegularExpression Id. */
  int CYPHERQUERY = 43;
  /** RegularExpression Id. */
  int LUCENEQUERY = 44;
  /** RegularExpression Id. */
  int INDEXED = 45;
  /** RegularExpression Id. */
  int RELATION = 46;
  /** RegularExpression Id. */
  int RELATIONAL = 47;
  /** RegularExpression Id. */
  int ATTRIBUTE = 48;
  /** RegularExpression Id. */
  int PROPERTYGRAPH = 49;
  /** RegularExpression Id. */
  int NODE = 50;
  /** RegularExpression Id. */
  int EDGE = 51;
  /** RegularExpression Id. */
  int PATH = 52;
  /** RegularExpression Id. */
  int VIEW = 53;
  /** RegularExpression Id. */
  int SEMISTRUCTURED = 54;
  /** RegularExpression Id. */
  int DOCUMENT = 55;
  /** RegularExpression Id. */
  int HISTOGRAM = 56;
  /** RegularExpression Id. */
  int SCHEMA = 57;
  /** RegularExpression Id. */
  int TEXTOBJECT = 58;
  /** RegularExpression Id. */
  int MATRIX = 59;
  /** RegularExpression Id. */
  int CSV = 60;
  /** RegularExpression Id. */
  int REPORT = 61;
  /** RegularExpression Id. */
  int EVERY = 62;
  /** RegularExpression Id. */
  int HOURS = 63;
  /** RegularExpression Id. */
  int MINUTES = 64;
  /** RegularExpression Id. */
  int DAYS = 65;
  /** RegularExpression Id. */
  int TODAY = 66;
  /** RegularExpression Id. */
  int TEMPORAL = 67;
  /** RegularExpression Id. */
  int NULL = 68;
  /** RegularExpression Id. */
  int WITNESSOBJECT = 69;
  /** RegularExpression Id. */
  int WITNESS = 70;
  /** RegularExpression Id. */
  int STRING = 71;
  /** RegularExpression Id. */
  int INTEGER = 72;
  /** RegularExpression Id. */
  int DIGITS = 73;
  /** RegularExpression Id. */
  int SEMICOLON = 74;
  /** RegularExpression Id. */
  int COLON = 75;
  /** RegularExpression Id. */
  int LR_BRACKET = 76;
  /** RegularExpression Id. */
  int RR_BRACKET = 77;
  /** RegularExpression Id. */
  int LS_BRACKET = 78;
  /** RegularExpression Id. */
  int RS_BRACKET = 79;
  /** RegularExpression Id. */
  int COMMA = 80;
  /** RegularExpression Id. */
  int EQUAL = 81;
  /** RegularExpression Id. */
  int FSLASH = 82;
  /** RegularExpression Id. */
  int NEQ = 83;
  /** RegularExpression Id. */
  int GT = 84;
  /** RegularExpression Id. */
  int LT = 85;
  /** RegularExpression Id. */
  int GEQ = 86;
  /** RegularExpression Id. */
  int LEQ = 87;
  /** RegularExpression Id. */
  int DOUBLE_BAR = 88;
  /** RegularExpression Id. */
  int DOT = 89;
  /** RegularExpression Id. */
  int UNDERLINE = 90;
  /** RegularExpression Id. */
  int AT = 91;
  /** RegularExpression Id. */
  int SHARP = 92;
  /** RegularExpression Id. */
  int DOLLER = 93;
  /** RegularExpression Id. */
  int STAR = 94;
  /** RegularExpression Id. */
  int DIVIDE = 95;
  /** RegularExpression Id. */
  int MODULE = 96;
  /** RegularExpression Id. */
  int PLUS = 97;
  /** RegularExpression Id. */
  int MINUS = 98;
  /** RegularExpression Id. */
  int SINGLE_QUOTE = 99;
  /** RegularExpression Id. */
  int DIGIT = 100;
  /** RegularExpression Id. */
  int LETTER = 101;
  /** RegularExpression Id. */
  int ALPHANUM = 102;
  /** RegularExpression Id. */
  int FLOAT = 103;
  /** RegularExpression Id. */
  int VariableName = 104;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"create\"",
    "\"file\"",
    "\"delete\"",
    "\"datasource\"",
    "\"using\"",
    "\"package\"",
    "\"form\"",
    "\"filepath\"",
    "\"import\"",
    "\"function\"",
    "\"analysis\"",
    "\"library\"",
    "\"dictionary\"",
    "\"annotate\"",
    "\"tdm\"",
    "\"termdocumentmatrix\"",
    "\"index\"",
    "\"in\"",
    "\"is\"",
    "\"and\"",
    "\"or\"",
    "\"not\"",
    "\"as\"",
    "\"all\"",
    "\"distinct\"",
    "\"top\"",
    "\"percent\"",
    "\"with\"",
    "\"ontology\"",
    "\"by\"",
    "\"where\"",
    "\"load\"",
    "\"store\"",
    "\"select\"",
    "\"project\"",
    "\"partition\"",
    "\"execute\"",
    "\"between\"",
    "\"like\"",
    "\"sqlquery\"",
    "\"sqlppquery\"",
    "\"cypherquery\"",
    "\"licenequery\"",
    "\"indexed\"",
    "\"relation\"",
    "\"relational\"",
    "\"attribute\"",
    "\"propertygraph\"",
    "\"node\"",
    "\"edge\"",
    "\"path\"",
    "\"view\"",
    "\"semistructured\"",
    "\"document\"",
    "\"histogram\"",
    "\"schema\"",
    "\"textobject\"",
    "\"matrix\"",
    "\"csv\"",
    "\"report\"",
    "\"every\"",
    "\"hours\"",
    "\"minutes\"",
    "\"days\"",
    "\"today\"",
    "\"temporal\"",
    "\"null\"",
    "\"witnessobject\"",
    "\"witness\"",
    "\"string\"",
    "\"integer\"",
    "<DIGITS>",
    "\";\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\"=\"",
    "\"\\\\\"",
    "\"!=\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"||\"",
    "\".\"",
    "\"_\"",
    "\"@\"",
    "\"#\"",
    "\"$\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"+\"",
    "\"-\"",
    "\"\\\'\"",
    "<DIGIT>",
    "<LETTER>",
    "<ALPHANUM>",
    "<FLOAT>",
    "<VariableName>",
  };

}
