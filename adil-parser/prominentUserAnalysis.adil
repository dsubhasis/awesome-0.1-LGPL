use db as d;
create analysis prominentUserAnalysis as(
htSet[] := ["h1", "h2", "hn"];
baseData := executeSQL ("with temp as (select userid, json_array_elements((entities-> 'entities' -> 'hashtags')::json) ->>'text' as ht from db.twitterstatus),
users as (select u.screen_name as name, s.id, s.created_at, s.entities-> 'entities' -> 'user_mentions' as mention from db.twitteruser u, db.twitterstatus s where u.userid in (select userid from temp where ht in $htSet) and u.userid = s.userid),
select created_at::TIMESTAMP::DATE as date, name, json_array_elements(mention) ->> 'name'  as mentionedName from users;");

mentionGraph := CONSTRUCTGRAPH (

View m :=  executeCypher(
"ASSERT user.userName IS UNIQUE
# create nodes
Merge (:User {userName: $R.name)
Merge (:User {userName: $R.mentionedName)
# create relations
MATCH (user: User {userName: $R.name})
MATCH (mentioned: User {userName: $R.mentionedName})
Merge (user)-[mt:MENTION]->(mentioned)
ON CREATE SET mt.date = $R.date, mt.count = $R.cnt"
) ;
Relation R := select name, count(a) from baseData group by name, mentionedName, date;

);
users := mentionGraph.pageRank(topk=True, returnCount=10) return AS ((x:User.userName));



) EXECUTE EVERY Day;