/*
 * Copyright (c) 2019.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *
 */

/* Generated By:JJTree&JavaCC: Do not edit this line. CypherConstants.java */
package edu.sdsc.Cypher;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CypherConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CREATE = 2;
  /** RegularExpression Id. */
  int CONSTRAINT = 3;
  /** RegularExpression Id. */
  int ON = 4;
  /** RegularExpression Id. */
  int ASSERT = 5;
  /** RegularExpression Id. */
  int UNIQUE = 6;
  /** RegularExpression Id. */
  int MATCH = 7;
  /** RegularExpression Id. */
  int MERGE = 8;
  /** RegularExpression Id. */
  int IS = 9;
  /** RegularExpression Id. */
  int CARET = 10;
  /** RegularExpression Id. */
  int CONCAT = 11;
  /** RegularExpression Id. */
  int DIV = 12;
  /** RegularExpression Id. */
  int IDIV = 13;
  /** RegularExpression Id. */
  int MINUS = 14;
  /** RegularExpression Id. */
  int MOD = 15;
  /** RegularExpression Id. */
  int MUL = 16;
  /** RegularExpression Id. */
  int PLUS = 17;
  /** RegularExpression Id. */
  int LEFTPAREN = 18;
  /** RegularExpression Id. */
  int RIGHTPAREN = 19;
  /** RegularExpression Id. */
  int LEFTBRACKET = 20;
  /** RegularExpression Id. */
  int RIGHTBRACKET = 21;
  /** RegularExpression Id. */
  int LEFTCURL = 22;
  /** RegularExpression Id. */
  int RIGHTCURL = 23;
  /** RegularExpression Id. */
  int QUOT = 24;
  /** RegularExpression Id. */
  int ATT = 25;
  /** RegularExpression Id. */
  int COLON = 26;
  /** RegularExpression Id. */
  int COMMA = 27;
  /** RegularExpression Id. */
  int DOT = 28;
  /** RegularExpression Id. */
  int QUES = 29;
  /** RegularExpression Id. */
  int SEMICOLON = 30;
  /** RegularExpression Id. */
  int SHARP = 31;
  /** RegularExpression Id. */
  int LT = 32;
  /** RegularExpression Id. */
  int GT = 33;
  /** RegularExpression Id. */
  int LE = 34;
  /** RegularExpression Id. */
  int GE = 35;
  /** RegularExpression Id. */
  int EQ = 36;
  /** RegularExpression Id. */
  int NE = 37;
  /** RegularExpression Id. */
  int LG = 38;
  /** RegularExpression Id. */
  int SIMILAR = 39;
  /** RegularExpression Id. */
  int UNNEST = 40;
  /** RegularExpression Id. */
  int SELECT = 41;
  /** RegularExpression Id. */
  int FROM = 42;
  /** RegularExpression Id. */
  int AS = 43;
  /** RegularExpression Id. */
  int GROUP = 44;
  /** RegularExpression Id. */
  int BY = 45;
  /** RegularExpression Id. */
  int LIMIT = 46;
  /** RegularExpression Id. */
  int DIGITS = 47;
  /** RegularExpression Id. */
  int DIGIT = 48;
  /** RegularExpression Id. */
  int LETTER = 49;
  /** RegularExpression Id. */
  int ALPHANUM = 50;
  /** RegularExpression Id. */
  int FIELDNAME = 51;
  /** RegularExpression Id. */
  int CYPHERFIELD = 52;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"create\"",
    "\"constraint\"",
    "\"on\"",
    "\"assert\"",
    "\"unique\"",
    "\"match\"",
    "\"merge\"",
    "\"is\"",
    "\"^\"",
    "\"||\"",
    "\"/\"",
    "\"idiv\"",
    "\"-\"",
    "\"%\"",
    "\"*\"",
    "\"+\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"\\\"\"",
    "\"@\"",
    "\":\"",
    "\",\"",
    "\".\"",
    "\"?\"",
    "\";\"",
    "\"#\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"=\"",
    "\"!=\"",
    "\"<>\"",
    "\"~=\"",
    "\"unnest\"",
    "\"select\"",
    "\"from\"",
    "\"as\"",
    "\"group\"",
    "\"by\"",
    "\"limit\"",
    "\"digita\"",
    "<DIGIT>",
    "<LETTER>",
    "<ALPHANUM>",
    "<FIELDNAME>",
    "<CYPHERFIELD>",
  };

}
